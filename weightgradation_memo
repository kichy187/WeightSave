import maya.cmds as cmds

class WeightInterpolationWithFixedInfluence:
    def __init__(self):
        self.window = "WeightInterpolationWithFixUI"
        self.widgets = {}
        self.fixed_influence = None
        
        self.show()
        

    def show(self):
        if cmds.window(self.window, exists=True):
            cmds.deleteUI(self.window)

        self.window = cmds.window(self.window, title="補間ツール(インフルエンス固定)", widthHeight=(400, 200))
        cmds.columnLayout(adjustableColumn=True, rowSpacing=10)

        cmds.button(label="選択メッシュからインフルエンス一覧を取得", command=self.get_influences)
        self.widgets["influenceList"] = cmds.textScrollList(allowMultiSelection=False, height=80)

        cmds.floatSliderGrp('powerSlider', label='曲線度 (0.1〜5.0)', field=True, minValue=0.1, maxValue=5.0, value=1.0)

        cmds.button(label="選択頂点に補間を適用", command=self.apply_interpolation)

        cmds.showWindow(self.window)

    def get_influences(self, *_):
        sel = cmds.ls(sl=True)
        if not sel:
            cmds.warning("メッシュを選択してください。")
            return

        mesh = sel[0]
        skin = self.get_skin_cluster(mesh)
        if not skin:
            cmds.warning("スキンクラスタが見つかりません。")
            return

        influences = cmds.skinCluster(skin, q=True, inf=True)
        cmds.textScrollList(self.widgets["influenceList"], e=True, removeAll=True)
        for inf in influences:
            cmds.textScrollList(self.widgets["influenceList"], e=True, append=inf)

    def get_skin_cluster(self, mesh):
        history = cmds.listHistory(mesh)
        skin_clusters = cmds.ls(history, type='skinCluster')
        return skin_clusters[0] if skin_clusters else None

    def apply_interpolation(self, *_):
        sel = cmds.ls(os=True, fl=True)
        if len(sel) < 3:
            cmds.warning("3つ以上の頂点を順序付きで選択してください。")
            return

        start_vtx = sel[0]
        end_vtx = sel[-1]
        mesh = start_vtx.split(".vtx")[0]
        skin = self.get_skin_cluster(mesh)
        if not skin:
            cmds.warning("スキンクラスタが見つかりません。")
            return

        influences = cmds.skinCluster(skin, q=True, inf=True)
        fixed_infl = cmds.textScrollList(self.widgets["influenceList"], q=True, selectItem=True)
        if not fixed_infl:
            cmds.warning("固定インフルエンスを選択してください。")
            return
        fixed = fixed_infl[0]

        power = cmds.floatSliderGrp('powerSlider', q=True, value=True)

        w_start = cmds.skinPercent(skin, start_vtx, q=True, v=True)
        w_end = cmds.skinPercent(skin, end_vtx, q=True, v=True)

        total = len(sel) - 1

        for idx, vtx in enumerate(sel):
            t_raw = idx / total
            t = t_raw ** power

            w_interp = []
            fixed_idx = influences.index(fixed)
            fixed_val = cmds.skinPercent(skin, vtx, transform=fixed, q=True)

            for i, (a, b) in enumerate(zip(w_start, w_end)):
                if i == fixed_idx:
                    w_interp.append(fixed_val)
                else:
                    w = ((1 - t) * a + t * b)
                    w_interp.append(w)

            # 正規化（合計が1になるよう補正）
            total_w = sum(w_interp)
            if total_w > 0.0:
                w_interp = [w / total_w for w in w_interp]

            weight_pairs = list(zip(influences, w_interp))
            cmds.skinPercent(skin, vtx, transformValue=weight_pairs)

        cmds.inViewMessage(amg="補間適用完了（固定インフルエンスあり）", pos="topCenter", fade=True)
WeightInterpolationWithFixedInfluence()
